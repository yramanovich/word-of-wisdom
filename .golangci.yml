run:
  # timeout for analysis
  timeout: 5m
  tests: true

linters-settings:
  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    check-type-assertions: true
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    check-blank: true
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # Default: ["standard", "default"]
    sections:
      - standard                 # Captures all standard packages if they do not match another section.
      - default                  # Contains all imports that could not be matched to another section type.
      - prefix(github.com/yramanovich/world-of-wisdom)  # Groups all imports with the specified Prefix.
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  revive:
    # see https://github.com/mgechev/revive#available-rules for details.
    ignore-generated-header: true
    severity: "warning"
    confidence: 0.8
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
        arguments: [["ID"]]
      - name: var-declaration
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id
  govet:
    # report about shadowed variables
    check-shadowing: false
  gocritic:
    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint run` to see all tags and checks.
    # Empty list by default. See https://github.com/go-critic/go-critic#usage -> section "Tags".
    enabled-tags:
      - diagnostic
    disabled-tags:
      - performance
      - style
      - opinionated
      - experimental
  wrapcheck:
    # An array of strings that specify substrings of signatures to ignore.
    # If this set, it will override the default set of ignored signatures.
    # See https://github.com/tomarrell/wrapcheck#configuration for more information.
    ignoreSigs:
      - .New(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
    ignoreSigRegexps:
      - \.New.*Error\(
    ignorePackageGlobs:
      - github.com/pkg/*

linters:
  disable-all: true
  enable:
    - gofmt
    - govet
    - errcheck
    - revive
    - gci
    - gocritic
    - staticcheck
    - unused
    - lll
#    - wrapcheck

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - wrapcheck
        - gocritic
        - errcheck

    - linters:
        - lll
      source: "^//go:generate"

  exclude-use-default: false
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0

  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number
  # print lines of code with issue, default is true
  print-issued-lines: true
  # print linter name in the end of issue text, default is true
  print-linter-name: true
  # make issues output unique by line, default is true
  uniq-by-line: true

severity:
  # Default value is empty string.
  # Set the default severity for issues. If severity rules are defined and the issues
  # do not match or no severity is provided to the rule this will be the default
  # severity applied. Severities should match the supported severity names of the
  # selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # -   Checkstyle: https://checkstyle.sourceforge.io/property_types.html#severity
  # -       Github: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  default-severity: error
  # The default value is false.
  # If set to true severity-rules regular expressions become case-sensitive.
  case-sensitive: false
